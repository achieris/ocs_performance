---
- name: Select storage class
  shell: |
    export KUBECONFIG={{ kubeconfig }}
    oc get sc -o=custom-columns=NAME:.metadata.name,PROVISIONER:.provisioner | egrep "{{ rbd_provisioner }}|{{ cephfs_provisioner  }}" | awk  '{print $1}'
  register: ocs_storage_classes
- name: Available storage classess
  debug:
        msg:
          - "Select the storage class: "
          - "{{ ocs_storage_classes.stdout_lines }}"

- pause:
    prompt: |
          Select the storage class:
  register: storage_class

- name: Create the statefulset fio-testing-performance accordingly
  shell: |
    export KUBECONFIG={{ kubeconfig }}
    oc create -f roles/rbd_ceph_performance/templates/fio-statefulset.yml
  ignore_errors: yes

- pause:
    prompt: |
          How many pvcs do you need?
  register: pvcs_number

- name: Let's create {{ pvcs_number.user_input }} pvcs with storage class {{ storage_class.user_input }}
  shell: |
    sed -i '5d' roles/rbd_ceph_performance/templates/pvc.yml
    sed -i '/  - ReadWrite/d' roles/rbd_ceph_performance/templates/pvc.yml
    sed -i '$d' roles/rbd_ceph_performance/templates/pvc.yml
    if [ "{{ storage_class.user_input|string }}" = "ocs-storagecluster-ceph-rbd" ]; then
       accessmode="ReadWriteOnce"
    else
       accessmode="ReadWriteMany"
    fi
    sed -i '/metadata:/a \ \ name: pvc-{{ item }}' roles/rbd_ceph_performance/templates/pvc.yml
    sed -i "/\ \ accessModes:/a \ \ - $accessmode" roles/rbd_ceph_performance/templates/pvc.yml
    sed -i '/\ \ \ \ storage:/a \ \ storageClassName: {{ storage_class.user_input }}' roles/rbd_ceph_performance/templates/pvc.yml
    oc -n {{ name_space }} create -f roles/rbd_ceph_performance/templates/pvc.yml
  args:
    warn: false
  with_sequence: start=1 end={{ pvcs_number.user_input|int }}

#- name: Let's check pvcs created
#  shell: |
#    while [[ $(oc -n {{ name_space }} get pvc pvc-{{ item }} -o 'jsonpath={..status.phase}') != "Bound" ]]; do echo "waiting for PVC status" && sleep 1; done
#  args:
#    warn: false
#  with_sequence: start=1 end={{ pvcs_number.user_input|int }}

- name: Let's delete {{ pvcs_number.user_input }} pvcs with storage class {{ storage_class.user_input }}
  shell: |
    sed -i '5d' roles/rbd_ceph_performance/templates/pvc.yml
    sed -i '/  - ReadWrite/d' roles/rbd_ceph_performance/templates/pvc.yml
    sed -i '$d' roles/rbd_ceph_performance/templates/pvc.yml
    if [ "{{ storage_class.user_input|string }}" = "ocs-storagecluster-ceph-rbd" ]; then
       accessmode="ReadWriteOnce"
    else
       accessmode="ReadWriteMany"
    fi
    sed -i '/metadata:/a \ \ name: pvc-{{ item }}' roles/rbd_ceph_performance/templates/pvc.yml
    sed -i "/\ \ accessModes:/a \ \ - $accessmode" roles/rbd_ceph_performance/templates/pvc.yml
    sed -i '/\ \ \ \ storage:/a \ \ storageClassName: {{ storage_class.user_input }}' roles/rbd_ceph_performance/templates/pvc.yml
    oc -n {{ name_space }} delete -f roles/rbd_ceph_performance/templates/pvc.yml
  args:
    warn: false
  with_sequence: start=1 end={{ pvcs_number.user_input|int }}
  register: _create_instances
  async: 3600  # Maximum runtime in seconds. Adjust as needed.
  poll: 0  # Fire and continue (never poll)
