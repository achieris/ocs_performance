---
- name: Install LSO and OCS operators
  shell:
            cmd: |
             oc create -f roles/rbd_ceph_performance/templates/ODF_v47/1_odf_operatorv47.yml
  ignore_errors: true
- name: Collect the machinesets names
  shell:
            cmd: |
              oc -n {{ machineset_project }} get machinesets -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}' | grep "^cluster"
  register: machinesets

- name: Export the machinesets in yaml files
  shell:
            cmd: |
                    oc -n {{ machineset_project }} get machinesets {{ item }} -o yaml | sed -e 's/{{ item }}/ocs-worker-{{ item.split('-')[5:8] | join('-') }}/g' | sed -e 's/{{ oldinstancetype }}/{{ instancetype }}/g' > ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
  loop: "{{ machinesets.stdout_lines }}"

- name: Configure label in nodes
  lineinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    state: absent
    regexp: '^      metadata: {}'
  loop: "{{ machinesets.stdout_lines }}"

- name: delete EBS
  lineinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    state: absent
    regexp: '^          - ebs'
  when: not item | string is search ("1c") or not item | string is search ("2c")
  loop: "{{ machinesets.stdout_lines }}"

- name: delete replicas for osd nodes
  lineinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    state: absent
    regexp: '^  replicas:'
  loop: "{{ machinesets.stdout_lines }}"

- name: Add deviceName
  lineinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    insertafter: '^          blockDevices:'
    line: '          - deviceName: /dev/sdc'
  when: not item | string is search ("1c") or not item | string is search ("2c")
  loop: "{{ machinesets.stdout_lines }}"

- name: replica 2 for OSD nodes
  lineinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    insertbefore: '^  selector:'
    line: '  replicas: 2'
  when: item | string is search ("1a") or item | string is search ("2a") or item | string is search ("1b") or item | string is search ("2b")
  loop: "{{ machinesets.stdout_lines }}"

- name: replica 1 for arbiter nodes
  lineinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    insertbefore: '^  selector:'
    line: '  replicas: 1'
  when: item | string is search ("1c") or item | string is search ("2c")
  loop: "{{ machinesets.stdout_lines }}"

- name: Add EBS
  lineinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    insertafter: '^          - deviceName: /dev/sdc'
    line: '            ebs:'
  when: not item | string is search ("1c") or not item | string is search ("2c")
  loop: "{{ machinesets.stdout_lines }}"

- name: Add EBS size {{ ebs_size }}
  lineinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    regexp: '^              volumeSize: .+'
    line: '              volumeSize: {{ ebs_size }}'
  when: not item | string is search ("1c")
  loop: "{{ machinesets.stdout_lines }}"

- name: Add ocs labels to OSD nodes to zone1
  blockinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    insertbefore: "      providerSpec:"
    block: |2
            taints:
            - effect: NoSchedule
              key: node.ocs.openshift.io/storage
              value: "true"
            metadata:
              creationTimestamp: null
              labels:
                node-role.kubernetes.io/infra: ""
                topology.kubernetes.io/zone: {{ zone_1 }}
                cluster.ocs.openshift.io/openshift-storage: ""
  when: item | string is search ("1a") or item | string is search ("2a")
  loop: "{{ machinesets.stdout_lines }}"

- name: Add ocs labels to OSD nodes to zone_2
  blockinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    insertbefore: "      providerSpec:"
    block: |2
            taints:
            - effect: NoSchedule
              key: node.ocs.openshift.io/storage
              value: "true"
            metadata:
              creationTimestamp: null
              labels:
                node-role.kubernetes.io/infra: ""
                topology.kubernetes.io/zone: {{ zone_2 }}
                cluster.ocs.openshift.io/openshift-storage: ""
  when: item | string is search ("1b") or item | string is search ("2b")
  loop: "{{ machinesets.stdout_lines }}"

- name: Add ocs labels to arbiter zone
  blockinfile:
    path: ./ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
    insertbefore: "      providerSpec:"
    block: |2
            metadata:
              creationTimestamp: null
              labels:
                node-role.kubernetes.io/infra: ""
                topology.kubernetes.io/zone: {{ arbiter }}
  when: item | string is search ("1c") or item | string is search ("2c")
  loop: "{{ machinesets.stdout_lines }}"

- name: Create machinesets and replicas
  shell:
            cmd: |
                    oc apply -f ocs-worker-{{ item.split('-')[5:8] | join('-') }}.yaml
  loop: "{{ machinesets.stdout_lines }}"

- name: Pause for 6 minutes to provisioning machines
  pause:
    minutes: 6

- name: partitioning disks
  include_tasks: partitioning.yml

- name: Install LSO and OCS operators
  shell:
            cmd: |
             oc create -f roles/rbd_ceph_performance/templates/ODF_v47/2_odf_operatorv47.yml
  ignore_errors: true

- name: Delete yaml files
  file:
    path: "{{ item }}"
    state: absent
  with_fileglob:
    - "*.yaml"