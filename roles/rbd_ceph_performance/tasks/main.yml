 ---
- pause:
    prompt: |
          Valid I/O type
          rw
          write
          read
  register: io_type

- pause:
    prompt: |
          Valid I/O size example: 4K, 8K, 16K, 32K, 64K, 128K, 256K, 1024K, 4096K
  register: io_size

- pause:
    prompt: |
          Valid io_threads are power of 2, example: 1, 2, 4, 8, 16, 32, 64, 128
  register: io_threads

- pause:
    prompt: |
          IO total in G, up to 198G, example: 1G, 10G, 100G, 200G
  register: io_total

- pause:
    prompt: |
          IO pattern, valid rand(random), seq(sequential) example: rand
  register: io_pattern

- pause:
    prompt: |
          IO rw_mix_read, valid integer from 10 to 90, example: 50
  register: rw_mix_read

 - name: Let's create 3 pvcs block with storage class ocs-storagecluster-ceph-rbd
  shell: |
    sed -i '5d' {{ pvc_yml }}
    sed -i '/  - ReadWrite/d' {{ pvc_yml }}
    sed -i '$d' {{ pvc_yml }}
    sed -i '/metadata:/a \ \ name: {{ pvc }}-{{ item }}' {{ pvc_yml }}
    sed -i '/\ \ accessModes:/a \ \ - ReadWriteOnce' {{ pvc_yml }}
    sed -i '/\ \ \ \ storage:/a \ \ storageClassName: ocs-storagecluster-ceph-rbd' {{ pvc_yml }}
    oc -n openshift-storage create -f {{ pvc_yml }}
  args:
    warn: false
  with_sequence: start=1 end=3
  ignore_errors: yes

- name: Pool status before rbd bench
  shell: |
    TOOLS_POD=$(oc get pods -n openshift-storage -l app=rook-ceph-tools -o name -o=jsonpath='{.items[0].metadata.name}')
    oc exec -n {{ name_space }} $TOOLS_POD -it -- rados df
  register: pool_status

- name: Print pool status before rbd bench
  debug:
    msg: "{{ pool_status.stdout.split('\n') }}"

- name: 'rbd bench rbd --io-type {{ io_type }} --io-size {{ io_size }} --io-threads {{ io_threads }} --io-total {{ io_total }} --io-pattern {{ io_pattern }} --rw-mix-read {{ rw_mix_read }}'
  shell: |
    rbd bench {{ pool_name }}/{{ rbd_image_name }} --io-type {{ io_type }} --io-size {{ io_size }} --io-threads {{ io_threads }} --io-total {{ io_total }} --io-pattern {{ io_pattern }} --rw-mix-read {{ rw_mix_read }}
  register: rados_bench_out
  when: io_type == "rw"

- name: Print rbd bench results
  debug:
    msg: "{{ rados_bench_out.stdout.split('\n') }}"
  when: io_type == "rw"

- name: 'rbd bench rbd --io-type {{ io_type }} --io-size {{ io_size }} --io-threads {{ io_threads }} --io-total {{ io_total }} --io-pattern {{ io_pattern }}'
  shell: |
    rbd bench {{ pool_name }}/{{ rbd_image_name }} --io-type {{ io_type }} --io-size {{ io_size }} --io-threads {{ io_threads }} --io-total {{ io_total }} --io-pattern {{ io_pattern }}
  register: rados_bench_out
  when: io_type == "read" or io_type == "write"

- name: Print rbd bench results
  debug:
    msg: "{{ rados_bench_out.stdout.split('\n') }}"
  when: io_type == "read" or io_type == "write"

- name: Pool status after rbd bench
  shell: |
    ceph df | egrep "%USED|{{ pool_name }}"
  register: pool_status
  run_once: true
- name: Print pool status after rbd bench
  debug:
    msg: "{{ pool_status.stdout.split('\n') }}"
  run_once: true

# Pause for 60 to flush cache or bluestore transactions
- name: Wating for 30 secs to flush cache and bluestore operations before delete the rbd images
  pause:
    seconds: 30

- name: Delete rbd testing volumes in ceph
  shell:
    cmd: rbd rm {{ pool_name }}/{{ rbd_image_name }}
  ignore_errors: True