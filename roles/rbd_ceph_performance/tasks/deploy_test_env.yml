---
- name: Include task StorageClasses in play
  import_tasks: storage_classess.yml
- name: Include task fio statefulset and scalability in play
  import_tasks: fio_pods.yml
- name: Include task fio workload profile in play
  import_tasks: fio_profile.yml
- name: Collect fio-testing-performance pod names
  shell: |
    export KUBECONFIG={{ kubeconfig }}
    oc get pods -n {{ name_space }} -l app=fio-testing-performance -o name -o=jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}'
  register: fio_ceph_tool_pods

- name: fio benchmarking mixed rbd rw with storage class {{ storage_class.user_input }}
  shell: |
    export KUBECONFIG={{ kubeconfig }}
    oc exec -n {{ name_space }} {{ item }} -it -- fio --randrepeat=1 --ioengine=libaio --direct=1 --gtod_reduce=1 --name=test --directory=/usr/share/ocs-pvc --bs={{ io_size.user_input }}K --iodepth={{ io_threads.user_input }} --size={{ io_total.user_input }}G --rw={{ io_type.user_input }} --rwmixread={{ rwmixread.user_input }} --rwmixwrite={{ rwmixwrite.user_input }} --nrfiles={{ io_total.user_input|int|round(0,'common') * 1024 / io_size.user_input|int|round(0,'common') }} --refill_buffers=1
  loop: "{{ fio_ceph_tool_pods.stdout_lines }}"
  register: _create_instances
  async: 3600  # Maximum runtime in seconds. Adjust as needed.
  poll: 0  # Fire and continue (never poll)
  when: io_type.user_input == "readwrite" or io_type.user_input == "randrw"

- name: Testing storage class {{ storage_class.user_input }} with fio --randrepeat=1 --ioengine=libaio --direct=1 --gtod_reduce=1 --name=test --directory=/usr/share/ocs-pvc --bs={{ io_size.user_input }}K --iodepth={{ io_threads.user_input }} --size={{ io_total.user_input }}G --rw={{ io_type.user_input }} --rwmixread={{ rwmixread.user_input }} --rwmixwrite={{ rwmixwrite.user_input }} --nrfiles={{ io_total.user_input|int|round(0,'common') * 1024 / io_size.user_input|int|round(0,'common') }} --refill_buffers=1 mixed rw jobs with storage class {{ storage_class.user_input }}
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: _jobs
  until: _jobs.finished
  delay: 10  # Check every 5 seconds. Adjust as you like.
  retries: 360  # Retry up to 10 times. Adjust as needed.
  loop: "{{ _create_instances.results }}"
  when: io_type.user_input == "readwrite" or io_type.user_input == "randrw"

- name: Print fio benchmarking stats with storage class {{ storage_class.user_input }}
  debug:
    msg: "{{ item.stdout_lines }}"
  loop: "{{ _jobs.results }}"
  when: io_type.user_input == "readwrite" or io_type.user_input == "randrw"

- name: fio benchmarking read, write, randwrite with storage class {{ storage_class.user_input }}
  shell: |
    export KUBECONFIG={{ kubeconfig }}
    oc exec -n {{ name_space }} {{ item }} -it -- fio --randrepeat=1 --ioengine=libaio --direct=1 --gtod_reduce=1 --name=test --directory=/usr/share/ocs-pvc --bs={{ io_size.user_input }}K --iodepth={{ io_threads.user_input }} --size={{ io_total.user_input }}G --rw={{ io_type.user_input }} --nrfiles={{ io_total.user_input|int|round(0,'common') * 1024 / io_size.user_input|int|round(0,'common') }} --refill_buffers=1
  loop: "{{ fio_ceph_tool_pods.stdout_lines }}"
  register: _create_instances
  async: 3600  # Maximum runtime in seconds. Adjust as needed.
  poll: 0  # Fire and continue (never poll)
  when: io_type.user_input == "read" or io_type.user_input == "write" or io_type.user_input == "randwrite" or io_type.user_input == "randread"

- name: Testing storage class {{ storage_class.user_input }} with fio --randrepeat=1 --ioengine=libaio --direct=1 --gtod_reduce=1 --name=test --directory=/usr/share/ocs-pvc --bs={{ io_size.user_input }}K --iodepth={{ io_threads.user_input }} --size={{ io_total.user_input }}G --rw={{ io_type.user_input }} --nrfiles={{ io_total.user_input|int|round(0,'common') * 1024 / io_size.user_input|int|round(0,'common') }} --refill_buffers=1
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: _jobs
  until: _jobs.finished
  delay: 10  # Check every 10 seconds. Adjust as you like.
  retries: 360  # Retry up to 360 times. Adjust as needed.
  loop: "{{ _create_instances.results }}"
  when: io_type.user_input == "read" or io_type.user_input == "write" or io_type.user_input == "randwrite" or io_type.user_input == "randread"

- name: Print fio benchmarking stats testing storage class {{ storage_class.user_input }}
  debug:
    msg: "{{ item.stdout_lines }}"
  loop: "{{ _jobs.results }}"
  when: io_type.user_input == "read" or io_type.user_input == "write" or io_type.user_input == "randwrite" or io_type.user_input == "randread"

- name: Testing fio testing storage class {{ storage_class.user_input }} completed!!! I'm going to clean fio environment
  shell: |
    export KUBECONFIG={{ kubeconfig }}
    oc delete -f roles/rbd_ceph_performance/templates/fio-statefulset.yml
  ignore_errors: yes
